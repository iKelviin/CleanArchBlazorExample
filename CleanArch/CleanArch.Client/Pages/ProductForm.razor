@page "/product/add"
@page "/product/edit/{id:int}"

@inject ProductService ProductService
@inject NavigationManager NavigationManager

<h3>@(id == 0 ? "Add Product" : "Edit Product")</h3>

<EditForm Model="product" OnValidSubmit="HandleValidSubmit" FormName="productForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Product Name</label>
        <InputText id="name" class="form-control" @bind-Value="product.Name" />
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price" class="form-control" @bind-Value="product.Price" />
    </div>

    <div class="form-group">
        <label for="stock">Stock</label>
        <InputNumber id="stock" class="form-control" @bind-Value="product.Stock" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [Parameter] public int id { get; set; }
    private Product product = new Product();

    protected override async Task OnInitializedAsync()
    {
        if (id != 0) // Edit mode
        {
            product = await ProductService.GetProductById(id);
        }
    }

    private async Task HandleValidSubmit()
    {
        if (id == 0)
        {
            await ProductService.AddProduct(product);
        }
        else
        {
            await ProductService.UpdateProduct(product);
        }

        NavigationManager.NavigateTo("/products");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}
