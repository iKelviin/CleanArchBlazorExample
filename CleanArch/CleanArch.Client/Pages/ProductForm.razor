@page "/product/add"
@page "/product/edit/{id:int}"

@rendermode InteractiveWebAssembly
@inject ProductService ProductService
@inject NavigationManager NavigationManager



<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4>@(id == 0 ? "Adicionar Produto" : "Editar Produto")</h4>
            </div>
            <div class="card-body">
                <EditForm Model="product" OnValidSubmit="HandleValidSubmit" FormName="productForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="row">
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="name" class="form-label">Nome do Produto</label>
                                <InputText id="name" type="text" autocomplete="not" class="form-control" @bind-Value="product.Name" />
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="price" class="form-label">Preço</label>
                                <InputNumber id="price" type="text" autocomplete="not" class="form-control" @bind-Value="product.Price" />
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xxl-3 col-md-6">
                            <div>
                                <label for="stock" class="form-label">Estoque</label>
                                <InputNumber id="stock" type="text" autocomplete="not" class="form-control" @bind-Value="product.Stock" />
                            </div>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-xxl-3 col-md-6">
                            <div class="d-flex justify-content-between">
                                <button type="submit" class="btn btn-primary">Salvar</button>
                                <button type="button" class="btn btn-light" @onclick="Cancel">Voltar</button>
                            </div>
                        </div>
                    </div>

                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter] public int id { get; set; }
    private Product product = new Product();

    protected override async Task OnInitializedAsync()
    {
        if (id != 0) // Edit mode
        {
            product = await ProductService.GetProductById(id);
        }
    }

    private async Task HandleValidSubmit()
    {
        if (id == 0)
        {
            await ProductService.AddProduct(product);
        }
        else
        {
            await ProductService.UpdateProduct(product);
        }

        NavigationManager.NavigateTo("/products");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}
