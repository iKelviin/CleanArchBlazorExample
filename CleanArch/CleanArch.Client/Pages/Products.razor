@page "/products"
@rendermode InteractiveWebAssembly
@inject ProductService ProductService
@inject NavigationManager NavigationManager


<div class="card">
    <div class="card-header align-items-center d-flex">
        <h4 class="card-title mb-0 flex-grow-1">Lista de Produtos</h4>
        <div class="flex-shrink-0">
            <button type="button" class="btn btn-info waves-effect material-shadow-none" @onclick="AddProduct">Adicionar</button>
        </div>
    </div>

    <div class="card-body">
        <div class="table-responsive table-card">
            <table class="table table-borderless table-centered align-middle table-nowrap mb-0">
                <thead class="text-muted table-light">
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Nome</th>
                        <th scope="col">Preço</th>
                        <th scope="col">Estoque</th>
                        <th scope="col">Ação</th>
                    </tr>
                </thead>
                <tbody>
                    @if (products == null)
                    {
                        <tr>
                            <td colspan="4">Nenhum registo!</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var product in products)
                        {
                            <tr>
                                <td>
                                    @product.Id
                                </td>
                                <td>
                                    @product.Name
                                </td>
                                <td>
                                    @product.Price
                                </td>
                                <td>
                                    @product.Stock
                                </td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-soft-info" @onclick="() => EditProduct(product.Id)"><i class="ri-pencil-fill"></i> Editar</button>
                                    <button type="button" class="btn btn-sm btn-soft-danger" @onclick="() => DeleteProduct(product.Id)"><i class="ri-delete-bin-fill"></i> Excluir</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody><!-- end tbody -->
            </table><!-- end table -->
        </div>
    </div>
</div>


@code {
    private IEnumerable<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetAllProducts();
    }

    private void AddProduct()
    {
        NavigationManager.NavigateTo("/product/add");
    }

    private void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"/product/edit/{id}");
    }

    private async Task DeleteProduct(int id)
    {
        await ProductService.DeleteProduct(id);
        products = await ProductService.GetAllProducts(); // Recarrega a lista após exclusão
    }
}
